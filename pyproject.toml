[tool.poetry]
name = "pycytominer"
# This version is a placeholder updated during build by poetry-dynamic-versioning
version = "1.1.0.post29.dev0+9615c0d"
description = "Python package for processing image-based profiling data"
authors = [
    "Erik Serrano",
    "Niranj Chandrasekaran",
    "Dave Bunten",
    "Kenneth I. Brewer",
    "Jenna Tomkinson",
    "Roshan Kern",
    "Michael Bornholdt",
    "Stephen Fleming",
    "Ruifan Pei",
    "John Arevalo",
    "Hillary Tsang",
    "Vincent Rubinetti",
    "Erin Weisbart",
    "Charlotte Bunne",
    "Alexandr A. Kalinin",
    "Rebecca Senft",
    "Stephen J. Taylor",
    "Nasim Jamali",
    "Adeniyi Adeboye",
    "Allen Goodman",
    "Juan Caicedo",
    "Anne E. Carpenter",
    "Beth A. Cimini",
    "Shantanu Singh",
    "Gregory P. Way",
]
maintainers = [
    "Gregory P. Way <gregory.way@cuanschutz.edu>",
    "Dave Bunten <dave.bunten@cuanschutz.edu>",
    "Kenneth I. Brewer <ken@kenbrewer.com>",
]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://pycytominer.readthedocs.io/"
repository = "https://github.com/cytomining/pycytominer"
include = [
    { path = "poetry.lock", format = "sdist" }, 
]

[tool.poetry.dependencies]
python          = ">=3.8,<4.0"
numpy           = ">=1.16.5"
scipy           = ">=1.5"
pandas          = ">=1.2.0"
scikit-learn    = ">=0.21.2"
sqlalchemy      = ">=1.3.6, <2"
pyarrow         = ">=8.0.0"

# Extra dependencies for cell_locations 
fsspec  =   {version = ">=2023.1.0",    optional=true}
s3fs    =   {version = ">=2023.4.0",       optional=true}
boto3   =   {version = ">=1.26.79",     optional=true}
fire    =   {version = ">=0.5.0",       optional=true}

# Extra dependencies for collate
cytominer-database = {version = "0.3.4", optional=true}

[tool.poetry.extras]
cell-locations = ["fsspec", "s3fs", "boto3", "fire"]
collate = ["cytominer-database"]

[tool.poetry.group.dev]
optional=true

[tool.poetry.group.dev.dependencies]
pytest = ">=5.0.1"
codecov = ">=2.1.12"
pytest-cov = "^4.1.0"
pre-commit = ">=3.3.2"
commitizen = "^3.12.0"
ruff = "^0.3.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
ipython = "^8.12"
nbsphinx = "^0.9.3"
mock = "^5.1.0"
dunamai = "^1.19.0"
mkdocs-material = "^9.5.19"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}
mkdocs-include-markdown-plugin = "^6.0.5"

[tool.poetry-dynamic-versioning]
enable = false
style = "pep440"
vcs = "git"

[tool.poetry-dynamic-versioning.substitution]
files = ["pycytominer/__about__.py"]

[tool.commitizen]
# This version is used for changelog tracking and is updated using `cz bump`
version = "1.1.0"
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "commitizen"
update_changelog_on_bump = true
template = "dev_tools/commitizen/CHANGELOG.md.j2"
version_files = [
    "CITATION.cff"
]

[tool.ruff]
target-version = "py38"
line-length = 88
fix = true
extend-include = ["*.ipynb"]
exclude = [
    "walkthroughs/nbconverted/*",
]

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # flake8-bandit
    "S",
    # isort
    "I",
    # pydocstyle
    "D",
    # The following checks are disabled, but we are working towards enabling them in the future.
    # flake8-bugbear
    # "B",
    # mccabe
    # "C90",
    # tryceratops
    # "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]
exclude = ["*.ipynb"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` and `F401` (unusued imports) in all `__init__.py` files
"__init__.py" = ["E402", "F401"]
"tests/*" = [
    # Allow assert statements in tests
    "S101",
    # Disable docstring checks in tests
    "D",
]
"pycytominer/cyto_utils/*" = [
    # I (isort) is ignored due to circular dependencies in the cyto_utils module
    "I", 
    # S608 (raw sql operations) is ignored because it is a common pattern in the cyto_utils module
    "S608",
]

[tool.ruff.format]
preview = true
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = "tests"

[build-system]
requires = ["poetry-core>=1.7.0", "poetry-dynamic-versioning>=1.1.0"]
build-backend = "poetry_dynamic_versioning.backend"

# Avoids warnings aboud missing section
# see: https://setuptools-scm.readthedocs.io/en/latest/usage/
[tool.setuptools_scm]
